import { state } from "../state.js"; import { ScoreStrip, updateScoreStrip } from "../components/ScoreStrip.js"; import { advanceToNextRoundOrFinal } from "../flow.js";
export function MarkingRoom(){ const r=state.currentRound||1; const root=document.createElement("div"); root.className="wrap"; root.appendChild(ScoreStrip()); const opp=state.opponent; const qs=state[`round${r}Questions`]||[]; const pickedByOpp={}; qs.forEach(q=>pickedByOpp[q.id]=0); const body=document.createElement("div"); body.innerHTML=`<div class="h1">Mark ${opp} â€” Round ${r}</div>`; const marks={}; qs.forEach(q=>{ const panel=document.createElement("div"); panel.className="panel"; panel.innerHTML=`<div class="p" style="font-weight:700">${q.question}</div><div class="p">Opponent chose: <code>${q.options[pickedByOpp[q.id]]}</code></div>`; const row=document.createElement("div"); row.className="choice-row"; [[ "Correct",1 ],[ "Incorrect",0 ]].forEach(([label,val])=>{ const b=document.createElement("div"); b.className="choice"; b.textContent=label; b.addEventListener("click",()=>{ row.querySelectorAll(".choice").forEach(c=>c.classList.remove("selected")); b.classList.add("selected"); marks[q.id]=val; checkReady(); }); row.appendChild(b); }); panel.appendChild(row); body.appendChild(panel); }); const go=document.createElement("div"); go.className="row"; go.innerHTML=`<button id="go" class="btn right" disabled>GO</button>`; body.appendChild(go); root.appendChild(body); function checkReady(){ const done=Object.keys(marks).length===qs.length; const btn=root.querySelector("#go"); btn.disabled=!done; if(done) btn.classList.add("primary"); } root.querySelector("#go").addEventListener("click",()=>{ const points=Object.values(marks).reduce((a,b)=>a+b,0); state.perceivedScores[state.opponent]=(state.perceivedScores[state.opponent]||0)+points; updateScoreStrip(root); const overlay=document.createElement("div"); overlay.className="center-abs"; overlay.innerHTML=`<div><div class="h1">${state.self} scored ${state.opponent}</div><div class="h2">${points}</div></div>`; document.body.innerHTML=""; document.body.appendChild(overlay); setTimeout(()=>{ state.currentRound=Math.min(5,(state.currentRound||1)+1); if(state.currentRound<=5) location.hash = `#round${state.currentRound}`; else advanceToNextRoundOrFinal(); },2000); }); return root; }