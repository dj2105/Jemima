export async function ensureFirebase(){ return true; }
let roomStatus = {}; const listeners = new Map();
export async function setRoomStatus(roomCode, patch){ roomStatus[roomCode]={...(roomStatus[roomCode]||{}),...patch}; const k=`status:${roomCode}`; (listeners.get(k)||[]).forEach(fn=>fn(roomStatus[roomCode])); }
export async function subscribeRoomStatus(roomCode, cb){ const k=`status:${roomCode}`; const arr=listeners.get(k)||[]; arr.push(cb); listeners.set(k,arr); if(roomStatus[roomCode]) cb(roomStatus[roomCode]); return ()=>{ const a=listeners.get(k)||[]; const i=a.indexOf(cb); if(i>=0) a.splice(i,1); listeners.set(k,a); }; }
const ready = {}; export async function markReady({roomCode,round,phase,player}){ const key=`${roomCode}:${round}:${phase}`; ready[key]={...(ready[key]||{}),[player]:true}; const k=`ready:${key}`; (listeners.get(k)||[]).forEach(fn=>fn(ready[key])); }
export async function subscribeReady({roomCode,round,phase},cb){ const key=`${roomCode}:${round}:${phase}`; const k=`ready:${key}`; const arr=listeners.get(k)||[]; arr.push(cb); listeners.set(k,arr); if(ready[key]) cb(ready[key]); return ()=>{ const a=listeners.get(k)||[]; const i=a.indexOf(cb); if(i>=0) a.splice(i,1); listeners.set(k,a); }; }
const answerStore={}; export async function saveRoundAnswers({roomCode,round,player,answers}){ const key=`${roomCode}:${player}:r${round}`; answerStore[key]={answers}; }
export async function getOpponentAnswers({roomCode,round,player}){ const opponent=player==="Daniel"?"Jaime":"Daniel"; const key=`${roomCode}:${opponent}:r${round}`; return (answerStore[key]&&answerStore[key].answers)||{}; }
export function doc(){} export async function setDoc(){}